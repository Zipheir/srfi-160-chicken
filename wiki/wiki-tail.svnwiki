=== Optional lexical syntax

Each homogeneous vector datatype has an external representation which may be supported by the read and write procedures and by the program parser. Conformance to this SRFI does not in itself require support for these external representations.

For each value of {{@}} in { {{s8, u8, s16, u16, s32, u32, s64, u64, f32, f64, c64, c128}} }, if the datatype {{@vector}} is supported, then the external representation of instances of the datatype {{@vector}} is #@( ...elements... ).

For example, {{#u8(0 #e1e2 #xff)}} is a {{u8vector}} of length 3 containing 0, 100 and 255; {{#f64(-1.5)}} is an {{f64vector}} of length 1 containing -1.5.

Note that the syntax for float vectors conflicts with R5RS, which parses {{#f32()}} as 3 objects: {{#f}}, {{32}} and {{()}}. For this reason, conformance to this SRFI implies this minor nonconformance to R5RS.

This external representation is also available in program source code. For example, {{(set! x '#u8(1 2 3))}} will set x to the object {{#u8(1 2 3)}}. Literal homogeneous vectors, like heterogeneous vectors, are self-evaluating; they do not need to be quoted. Homogeneous vectors can appear in quasiquotations but must not contain unquote or unquote-splicing forms (i.e. {{`(,x #u8(1 2))}} is legal but {{`#u8(1 ,x 2)}} is not). This restriction is to accommodate the many Scheme systems that use the read procedure to parse programs.
=== Implementation
This implementation was developed on Chicken 5 and Chibi, and directly supports those two systems. There is support for Gauche as well. It should be easy to adapt to other implementations.

After downloading the source, it is necessary to run the atexpander.sh shell script in order to generate the individual files for the different types. This will take a skeleton file like at.sld and create the files u8.sld, s8.sld, ... c128.sld. The unexpander.sh script safely undoes the effects of atexpander.sh. The heavy lifting is done by sed.

Making this SRFI available on R6RS systems is straightforward, requiring only a replacement library file that includes the implementation files in the srfi/160/base directory and the srfi/160 directories. The file include.scm contains an R6RS (include) library that will be useful for systems that don't provide it.
=== The SRFI 160 base library
The library (srfi 160 base) is in the repository of this SRFI. It supports the eight procedures of SRFI 4, namely make-@vector, {{@vector}}, {{@vector?}}, {{@vector-length}}, {{@vector-ref}}, {{@vector-set!}}, {{@vector->list}}, and {{list->@vector}}, not only for the ten homogeneous vector types supported by SRFI 4, but also for the two homogeneous vector types beyond the scope of SRFI 4, namely {{c64vectors}} and {{c128vectors}}. In addition, the {{@?}} procedure, which is not in SRFI 4, is available for all types.

The implementation depends on SRFI 4. For systems that do not have a native SRFI 4 implementation, the version in the contrib/cowan directory of the SRFI 4 repository may be used; it depends only on a minimal implementation of {{bytevectors}}.

The tests are for the c64 and c128 procedures and the @? procedures only. The assumption is that tests for the underlying SRFI 4 procedures suffice for everything else.
=== The following files are provided:
* srfi.160.base.scm - Chicken 5 (srfi 160 base) library.
* srfi/160/base.sld - R7RS (srfi 160 base) library.
* srfi/160/base/complex.scm - Complex number implementation on top of SRFI 4.
* srfi/160/base/valid.scm - Validity (@?) predicates.
* srfi/160/base/at-vector2list.scm - Reimplementation of SRFI 4's @vector->list procedures that accept {{start}} and {{end}} optional arguments.
* srfi/160/base/r7rec.scm - Record-type definitions for R7RS or SRFI 9.
* srfi/160/base/r6rec.scm - Record-type definitions for R6RS.
* shared-base-tests.scm - Shared tests (no dependencies).
* chibi-base-tests.scm - Chibi test script wrapper.
* chicken-base-tests.scm - Chicken 5 test script wrapper.
=== The SRFI 160 libraries
The following files are provided:

* srfi/160/at.sld - Skeleton for Chibi libraries. Can be adapted to any R7RS system.
* srfi.160.at.scm - Skeleton for Chicken 5 libraries. Can be adapted to any R5RS system with simple byte vectors.
* srfi/160/at-impl.scm - Skeleton for shared implementation of SRFI 160 procedures.
* shared-tests.scm - Tests of the s16 library only (depends on Chicken or Chibi test library). The assumption is that if s16 works, everything works.
* chibi-tests.scm - Chibi test script wrapper.
* chicken-tests.scm - Chicken 5 test script wrapper.
* gauche-tests.scm - Gauche test script with embedded testing library.
=== Acknowledgements
Thanks to all participants in the SRFI 160 mailing list over the unconscionably long time it took me to get this proposal to finalization. Special thanks to Shiro Kawai
for bringing up many issues and contributing the code that extended many procedures from one {{@vector}} to many.
=== Authors
* John Cowan (based on SRFI 4 by Marc Feeley)
* Shiro Kawai (contributed a major patch).
* Ported to Chicken Scheme 5 by Sergey Goldgaber
=== Copyright
Copyright Â© John Cowan 2018.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice (including the next paragraph) shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
=== Version history
* [[https://github.com/diamond-lizard/srfi-160/releases/tag/0.4|0.4]] - Fix for [[https://github.com/diamond-lizard/srfi-160/issues/6|issue 6]]
* [[https://github.com/diamond-lizard/srfi-160/releases/tag/0.3|0.3]] - Fix for [[https://github.com/diamond-lizard/srfi-160/issues/5|issue 5]]
* [[https://github.com/diamond-lizard/srfi-160/releases/tag/0.2|0.2]] - Fix for [[https://github.com/diamond-lizard/srfi-160/issues/1|issue 1]]
* [[https://github.com/diamond-lizard/srfi-160/releases/tag/0.1|0.1]] - Ported to Chicken Scheme 5
